###############################################################################
###############################################################################
####                                                                       ####
####              THIS FILE WAS GENERATED WITH METASTRUCTURE               ####
####                       DO NOT EDIT IT MANUALLY!                        ####
####                                                                       ####
###############################################################################
###############################################################################

###############################################################################
# Default provider.
###############################################################################
provider "aws" {
  # assume_role {
  #   tags = {
  #     Generator = "Terraform"
  #   }
  #   transitive_tag_keys = ["Generator"]
  # }
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }
  region  = module.global.config.organization.aws_region
}

###############################################################################
# Create a provider to assume the {{#if params.assume_role}}{{params.assume_role}}{{/if}}{{#if params.sso_permission_set}}{{lodash "get" sso.permission_sets (params  params.sso_permission_set "name")}} permission set{{/if}} role on 
# the Terraform state account.
###############################################################################
provider "aws" {
  alias   = "terraform_state_account"
  assume_role { 
    role_arn = "arn:aws:iam::${aws_organizations_account.{{terraform.state.account}}.id}:role/{{#if params.assume_role}}{{params.assume_role}}{{/if}}{{#if params.sso_permission_set}}{{lodash "get" accounts (params terraform.state.account "permission_set_roles" params.sso_permission_set)}}{{/if}}"
    # tags = {
    #   Generator = "Terraform"
    # }
    # transitive_tag_keys = ["Generator"]
  }
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }
  region = module.global.config.organization.aws_region
}
{{#each accounts}}
###############################################################################
# Create a provider {{#unless (logic "and" (lodash "eq" @key ../organization.master_account) ../params.assume_role)}}to assume the {{#if ../params.assume_role}}{{../params.assume_role}}{{/if}}{{#if ../params.sso_permission_set}}{{lodash "get" ../sso.permission_sets (params  ../params.sso_permission_set "name")}} permission set{{/if}} role 
# {{/unless}}on account {{this.name}}.
###############################################################################
provider "aws" { 
  alias   = "{{@key}}" 
  assume_role { {{#unless (logic "and" (lodash "eq" @key ../organization.master_account) ../params.assume_role)}}
    role_arn = "arn:aws:iam::{{#if this.action}}{{this.id}}{{else}}${aws_organizations_account.{{@key}}.id}{{/if}}:role/{{#if ../params.assume_role}}{{../params.assume_role}}{{/if}}{{#if ../params.sso_permission_set}}{{lodash "get" ../accounts (params ../terraform.state.account "permission_set_roles" ../params.sso_permission_set)}}{{/if}}"{{/unless}}
    # tags = {
    #   Generator = "Terraform"
    # }
    # transitive_tag_keys = ["Generator"]
  } 
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }
  region = module.global.config.organization.aws_region
}

{{/each}}