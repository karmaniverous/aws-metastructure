###############################################################################
###############################################################################
####                                                                       ####
####              THIS FILE WAS GENERATED WITH METASTRUCTURE               ####
####                       DO NOT EDIT IT MANUALLY!                        ####
####                                                                       ####
###############################################################################
###############################################################################

###############################################################################
# Default provider.
###############################################################################
provider "aws" { {{#if params.permission_set}}
  assume_role {
    tags = {
      Generator = "Terraform"
    }
    transitive_tag_keys = ["Generator"]
  } {{/if}} 
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }{{#if params.permission_set}}
  profile = "{{organization.master_account}}"{{/if}}
  region = module.global.config.organization.aws_region{{#if params.permission_set}}
  shared_config_files = ["./_shared_config.local"]{{/if}}
}

###############################################################################
# Create a provider to assume the {{#if params.assume_role}}{{params.assume_role}}{{else}}{{lodash "get" accounts (params terraform.state.account "permission_set_roles" params.permission_set)}}{{/if}} 
# role on the Terraform state account.
###############################################################################
provider "aws" {
  alias   = "terraform_state_account"{{#if (logic "or" params.permission_set (logic "and" params.assume_role (logic "not" (lodash "eq" terraform.state.account organization.master_account))))}}
  assume_role { {{#if params.assume_role}}
    role_arn = "arn:aws:iam::${aws_organizations_account.{{terraform.state.account}}.id}:role/{{params.assume_role}}"{{/if}}
    {{#if params.permission_set}}tags = {
      Generator = "Terraform"
    }
    transitive_tag_keys = ["Generator"]
  {{/if}} }{{/if}}
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }{{#if params.permission_set}}
  profile = "{{terraform.state.account}}"{{/if}}
  region = module.global.config.organization.aws_region{{#if params.permission_set}}
  shared_config_files = ["./_shared_config.local"]{{/if}}
}
{{#each accounts}}
###############################################################################
# Create a provider {{#if (logic "or" ../params.permission_set (logic "and" ../params.assume_role (logic "not" (lodash "eq" @key ../organization.master_account))))}}to assume the {{#if ../params.assume_role}}{{../params.assume_role}}{{else}}{{lodash "get" this (params "permission_set_roles" ../params.permission_set)}}{{/if}} 
# role {{/if}}on account {{this.name}}.
###############################################################################
provider "aws" { 
  alias   = "{{@key}}"{{#if (logic "or" ../params.permission_set (logic "and" ../params.assume_role (logic "not" (lodash "eq" @key ../organization.master_account))))}}
  assume_role { {{#if ../params.assume_role}}
    role_arn = "arn:aws:iam::{{#if this.action}}{{this.id}}{{else}}${aws_organizations_account.{{@key}}.id}{{/if}}:role/{{../params.assume_role}}"{{/if}}
    {{#if ../params.permission_set}}tags = {
      Generator = "Terraform"
    }
    transitive_tag_keys = ["Generator"]
  {{/if}} }{{/if}}
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }{{#if ../params.permission_set}}
  profile = "{{@key}}"{{/if}}
  region = module.global.config.organization.aws_region{{#if ../params.permission_set}}
  shared_config_files = ["./_shared_config.local"]{{/if}}
}

{{/each}}