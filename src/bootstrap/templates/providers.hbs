###############################################################################
###############################################################################
####                                                                       ####
####              THIS FILE WAS GENERATED WITH METASTRUCTURE               ####
####                       DO NOT EDIT IT MANUALLY!                        ####
####                                                                       ####
###############################################################################
###############################################################################

###############################################################################
# Default provider.
###############################################################################
provider "aws" { {{#if cli_params.permission_set}}
  assume_role {
    tags = {
      Generator = "Terraform"
    }
    transitive_tag_keys = ["Generator"]
  } {{/if}} 
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }{{#if cli_params.permission_set}}
  profile = "{{organization.master_account}}"{{/if}}
  region = module.global.config.organization.aws_region{{#if cli_params.permission_set}}
  shared_config_files = ["./_shared_config.local"]{{/if}}
}

###############################################################################
# Create a provider to assume the {{#if cli_params.assume_role}}{{cli_params.assume_role}}{{else}}{{lodash "get" sso.permission_sets (params cli_params.permission_set "name")}} permission set{{/if}} 
# role on the Terraform state account.
###############################################################################
provider "aws" {
  alias   = "terraform_state_account"{{#if (logic "or" cli_params.permission_set (logic "and" cli_params.assume_role (logic "not" (lodash "eq" terraform.state.account organization.master_account))))}}
  assume_role { {{#if cli_params.assume_role}}
    role_arn = "arn:aws:iam::${aws_organizations_account.{{terraform.state.account}}.id}:role/{{cli_params.assume_role}}"{{/if}}
    {{#if cli_params.permission_set}}tags = {
      Generator = "Terraform"
    }
    transitive_tag_keys = ["Generator"]
  {{/if}} }{{/if}}
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }{{#if cli_params.permission_set}}
  profile = "{{terraform.state.account}}"{{/if}}
  region = module.global.config.organization.aws_region{{#if cli_params.permission_set}}
  shared_config_files = ["./_shared_config.local"]{{/if}}
}
{{#each (ifelse cli_params.permission_set (lodash "get" sso.reference.permission_set_accounts cli_params.permission_set) (lodash "keys" accounts))}}{{#with this as | accountKey |}}{{#with ../. as | root |}}{{#with (lodash "get" root.accounts accountKey) as | account |}}
###############################################################################
# Create a provider {{#if (logic "or" root.cli_params.permission_set (logic "and" root.cli_params.assume_role (logic "not" (lodash "eq" this root.organization.master_account))))}}to assume the {{#if root.cli_params.assume_role}}{{root.cli_params.assume_role}}{{else}}{{lodash "get" root.sso.permission_sets (params root.cli_params.permission_set "name")}} permission set{{/if}} 
# role {{/if}}on account {{account.name}}.
###############################################################################
provider "aws" { 
  alias   = "{{accountKey}}"{{#if (logic "or" root.cli_params.permission_set (logic "and" root.cli_params.assume_role (logic "not" (lodash "eq" accountKey root.organization.master_account))))}}
  assume_role { {{#if ../cli_params.assume_role}}
    role_arn = "arn:aws:iam::{{#if account.action}}{{account.id}}{{else}}${aws_organizations_account.{{accountKey}}.id}{{/if}}:role/{{root.cli_params.assume_role}}"{{/if}}
    {{#if root.cli_params.permission_set}}tags = {
      Generator = "Terraform"
    }
    transitive_tag_keys = ["Generator"]
  {{/if}} }{{/if}}
  default_tags {
    tags = {
      Generator = "Terraform"
    }
  }{{#if root.cli_params.permission_set}}
  profile = "{{accountKey}}"{{/if}}
  region = module.global.config.organization.aws_region{{#if root.cli_params.permission_set}}
  shared_config_files = ["./_shared_config.local"]{{/if}}
}

{{/with}}{{/with}}{{/with}}{{/each}}